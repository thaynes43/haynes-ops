apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: omni
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet

    controllers:
      omni:
        replicas: 1
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          cleanup-wireguard:
            image:
              repository: alpine
              tag: latest
            command:
              - /bin/sh
              - -c
              - |
                apk add --no-cache iproute2 psmisc kmod procps
                echo "Setting up environment for WireGuard..."

                # Load TUN module if available
                modprobe tun 2>/dev/null || echo "TUN module already loaded or not available"

                # Ensure sysctls needed for WireGuard/Siderolink (hostNetwork => affects the host)
                sysctl -w net.ipv4.conf.all.src_valid_mark=1 || true
                sysctl -w net.ipv4.ip_forward=1 || true
                sysctl -w net.ipv6.conf.all.forwarding=1 || true

                # Check TUN device
                if [ ! -c /dev/net/tun ]; then
                  echo "ERROR: /dev/net/tun device not available"
                  ls -la /dev/net/ || echo "/dev/net/ not found"
                else
                  echo "TUN device available: $(ls -la /dev/net/tun)"
                fi

                echo "Cleaning up existing WireGuard interfaces and processes..."
                if ip link show siderolink 2>/dev/null; then
                  echo "Removing existing siderolink interface"
                  ip link delete siderolink
                fi

                for iface in $(ip -6 addr show | grep "fdae:41e4:649
